plugins {
    id 'java'
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'io.github.nickid2018'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    api 'org.ow2.asm:asm:9.6'
    api 'org.ow2.asm:asm-tree:9.6'
    api 'org.ow2.asm:asm-commons:9.6'

    api 'commons-io:commons-io:2.15.0'
    api 'com.google.code.gson:gson:2.10.1'
    api 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

    api "org.apache.logging.log4j:log4j-api:2.19.0"
    api "org.apache.logging.log4j:log4j-core:2.19.0"
    api "org.apache.logging.log4j:log4j-slf4j-impl:2.19.0"

    api 'it.unimi.dsi:fastutil:8.5.12'
    api 'com.google.guava:guava:32.1.3-jre'
    api 'me.tongfei:progressbar:0.10.0'
    api 'net.sf.jopt-simple:jopt-simple:6.0-alpha-3'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    compileOnly(project(':wrapped-mc'))
    compileOnly('org.lwjgl:lwjgl:3.3.3')
    compileOnly('org.lwjgl:lwjgl-glfw:3.3.3')
    compileOnly('org.lwjgl:lwjgl-opengl:3.3.3')
    compileOnly('org.lwjgl:lwjgl-stb:3.3.3')
    compileOnly('org.joml:joml:1.10.5')
}

jar {
    manifest {
        attributes 'Main-Class': 'io.github.nickid2018.genwiki.GenerateWikiData'
    }
}

shadowJar {
    archiveFileName.set("GenWiki.jar")

    dependencies {
        exclude(project(":wrapped-mc"))
    }

    manifest {
        inheritFrom(project.tasks.jar.manifest)
    }
}

test {
    useJUnitPlatform()
}

tasks.register("run", JavaExec) {
    if (!file("run").isDirectory())
        mkdir("run")
    if (file("run/remapped").isDirectory())
        delete(fileTree("run/remapped"))
    workingDir = file("run")
    if (environment["MAKE_VERSION"] == null)
        environment["MAKE_VERSION"] = ""
    classpath = layout.buildDirectory.files("libs/GenWiki.jar")
    mainClass = "io.github.nickid2018.genwiki.GenerateWikiData"
    args(environment["MAKE_VERSION"])
    standardInput = System.in
}.configure {
    dependsOn(shadowJar)
}

tasks.register("runStatistics", JavaExec) {
    if (!file("run").isDirectory())
        mkdir("run")
    if (file("run/remapped").isDirectory())
        delete(fileTree("run/remapped"))
    workingDir = file("run")
    if (environment["MAKE_VERSION"] == null)
        environment["MAKE_VERSION"] = ""
    classpath = layout.buildDirectory.files("libs/GenWiki.jar")
    mainClass = "io.github.nickid2018.genwiki.GenerateWikiData"
    args(environment["MAKE_VERSION"], "--mode", "STATISTICS")
    standardInput = System.in
}.configure {
    dependsOn(shadowJar)
}

tasks.register("runStatisticsNotRun", JavaExec) {
    if (!file("run").isDirectory())
        mkdir("run")
    if (file("run/remapped").isDirectory())
        delete(fileTree("run/remapped"))
    workingDir = file("run")
    if (environment["MAKE_VERSION"] == null)
        environment["MAKE_VERSION"] = ""
    classpath = layout.buildDirectory.files("libs/GenWiki.jar")
    mainClass = "io.github.nickid2018.genwiki.GenerateWikiData"
    args(environment["MAKE_VERSION"], "--mode", "STATISTICS", "--not-run")
}.configure {
    dependsOn(shadowJar)
}

tasks.register("runISO", JavaExec) {
    if (!file("run").isDirectory())
        mkdir("run")
    if (file("run/remapped").isDirectory())
        delete(fileTree("run/remapped"))
    workingDir = file("run")
    if (environment["MAKE_VERSION"] == null)
        environment["MAKE_VERSION"] = ""
    classpath = layout.buildDirectory.files("libs/GenWiki.jar")
    mainClass = "io.github.nickid2018.genwiki.GenerateWikiData"
    args(environment["MAKE_VERSION"], "--mode", "ISO")
}.configure {
    dependsOn(shadowJar)
}

tasks.register("runISONotRun", JavaExec) {
    if (!file("run").isDirectory())
        mkdir("run")
    if (file("run/remapped").isDirectory())
        delete(fileTree("run/remapped"))
    workingDir = file("run")
    if (environment["MAKE_VERSION"] == null)
        environment["MAKE_VERSION"] = ""
    classpath = layout.buildDirectory.files("libs/GenWiki.jar")
    mainClass = "io.github.nickid2018.genwiki.GenerateWikiData"
    args(environment["MAKE_VERSION"], "--mode", "ISO", "--not-run")
}.configure {
    dependsOn(shadowJar)
}